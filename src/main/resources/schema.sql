CREATE TABLE IF NOT EXISTS PUBLIC.FILMS (
	ID INTEGER NOT NULL AUTO_INCREMENT,
	NAME VARCHAR(255),
	DESCRIPTION VARCHAR(300),
	RELEASE_DATE DATE,
	DURATION INTEGER,
	CONSTRAINT FILMS_PK PRIMARY KEY (ID)
);


CREATE TABLE IF NOT EXISTS PUBLIC.USERS (
	ID INTEGER NOT NULL AUTO_INCREMENT,
	EMAIL VARCHAR NOT NULL,
	LOGIN VARCHAR NOT NULL,
	NAME VARCHAR,
	BIRTHDAY DATE,
	CONSTRAINT USERS_PK PRIMARY KEY (ID)
);

CREATE TABLE IF NOT EXISTS PUBLIC.MPA (
	ID INTEGER NOT NULL AUTO_INCREMENT,
	RATE VARCHAR,
	CONSTRAINT MPA_PK PRIMARY KEY (ID),
	CONSTRAINT MPA_FILMS_FK FOREIGN KEY (ID) REFERENCES PUBLIC.FILMS(ID)
);


CREATE TABLE IF NOT EXISTS PUBLIC.GENRES (
	ID INTEGER NOT NULL AUTO_INCREMENT,
	NAME VARCHAR,
	CONSTRAINT GENRES_PK PRIMARY KEY (ID)
);

CREATE TABLE IF NOT EXISTS PUBLIC.FILMS_USERS (
	FILM_ID INTEGER,
	USER_ID INTEGER,
	CONSTRAINT FILMS_USERS_FILMS_FK FOREIGN KEY (FILM_ID) REFERENCES PUBLIC.FILMS(ID) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT FILMS_USERS_USERS_FK FOREIGN KEY (USER_ID) REFERENCES PUBLIC.USERS(ID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS PUBLIC.FILMS_GENRES (
	FILM_ID INTEGER,
	GENRE_ID INTEGER,
	CONSTRAINT FILMS_GENRES_FILMS_FK FOREIGN KEY (FILM_ID) REFERENCES PUBLIC.FILMS(ID) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT FILMS_GENRES_GENRES_FK FOREIGN KEY (GENRE_ID) REFERENCES PUBLIC.GENRES(ID) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS PUBLIC.USERS_FRIENDS (
	REQUEST_USER_ID INTEGER,
	RESPONSE_USER_ID INTEGER,
	STATUS BOOLEAN,
	CONSTRAINT USERS_FRIENDS_USERS_FK FOREIGN KEY (REQUEST_USER_ID) REFERENCES PUBLIC.USERS(ID) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT USERS_FRIENDS_USERS_FK_1 FOREIGN KEY (REQUEST_USER_ID) REFERENCES PUBLIC.USERS(ID) ON DELETE CASCADE ON UPDATE CASCADE
);
